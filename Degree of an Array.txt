//https://leetcode.com/problems/degree-of-an-array/description/

class Solution {
public:
    int findShortestSubArray(vector<int>& nums) {
        unordered_map<int, vector<int>> m;
        for(int i=0;i<nums.size();i++){
            m[nums[i]].push_back(i);
        }
        int cntMax = 1;
        int res = INT_MAX;
        for(auto i : m){
            vector <int> v = i.second;
            if(v.size() == cntMax) res = min(res, v[v.size() - 1] - v[0] + 1);
            else if(v.size() > cntMax){
                cntMax = v.size();
                res = v[v.size() - 1] - v[0] + 1;
            }
        }
        return res;
    }
};