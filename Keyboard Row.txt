//https://leetcode.com/problems/keyboard-row/description/

class Solution
{
    public:
        
    int findC(char c)
    {
                set s1={'q','w','e','r','t','y','u','i','o','p','Q','W','E','R','T','Y','U','I','O','P'};
set s2={'a','s','d','f','g','h','j','k','l','A','S','D','F','G','H','J','K','L'};
        if (s1.find(c) != s1.end()) return 1;
        else if (s2.find(c) != s2.end()) return 2;
        return 3;
    }
    vector<string> findWords(vector<string> &words)
    {

        vector<string> res;
        for (string word: words)
        {
            int state = findC(word[0]);
            for (int i = 1; i < word.length(); i++)
            {
                if (findC(word[i]) != state)
                {
                    state = -1;
                    break;
                }
            }
            if (state != -1) res.push_back(word);
        }
        return res;
    }
};