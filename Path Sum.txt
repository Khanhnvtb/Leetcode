https://leetcode.com/problems/path-sum/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool ans;
    void find(TreeNode* root, int sum, int targetSum){
        if(ans == true) return;
        if(!root->left && !root-> right){
            if(sum + root->val == targetSum) ans = true;
            return;
        }    
        if(root->left) find(root->left, sum + root->val, targetSum);
        if(root->right) find(root->right, sum + root->val, targetSum);
    }
    
    bool hasPathSum(TreeNode* root, int targetSum) {
        ans = false;
        if(root) find(root, 0, targetSum);
        return ans;
    }
};