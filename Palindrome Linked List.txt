//https://leetcode.com/problems/palindrome-linked-list/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode* slow = head;
        stack<ListNode* > s;
        while(slow){
            s.push(slow);
            slow = slow->next;
        }
        while (!s.empty()) {
            if (s.top()->val != head->val) return false;
            s.pop();
            head = head->next;
        }
        return true;
    }
};