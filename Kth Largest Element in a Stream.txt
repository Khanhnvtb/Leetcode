//https://leetcode.com/problems/kth-largest-element-in-a-stream

class KthLargest {
public:
    priority_queue<int, vector<int>, greater<int>> pq;
    int size;
    KthLargest(int k, vector<int>& nums) {
        sort(nums.begin(), nums.end());
        for(int i = nums.size() - 1; i >= 0; i--){
            if(pq.size() < k) pq.push(nums[i]);
            else break;
        }
        size = k;
    }
    
    int add(int val) {
        if(pq.size() < size) pq.push(val);
        else{
            if (val >= pq.top()) {
                pq.push(val);
                pq.pop();
            }
        }

        return pq.top(); 
    }
};

/**
 * Your KthLargest object will be instantiated and called as such:
 * KthLargest* obj = new KthLargest(k, nums);
 * int param_1 = obj->add(val);
 */
