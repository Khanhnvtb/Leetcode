//https://leetcode.com/problems/largest-triangle-area/description/

double distance(vector<int> a, vector<int> b){
    return sqrt((b[1] - a[1]) * (b[1] - a[1]) + (b[0] - a[0]) * (b[0] - a[0]));        
}

double triangleArea(double a, double b, double c){
    double h = (a + b + c) / 2;
    return sqrt(h * (h - a) * (h - b) * (h - c));
}

class Solution {
public:
    double largestTriangleArea(vector<vector<int>>& points) {
    double ans = 0;
       for(int i=0;i<points.size() - 2;i++)
           for(int j=i+1;j<points.size() - 1;j++)
               for(int k=j+1;k<points.size();k++)
                   ans = max(ans, triangleArea(distance(points[i], points[j]), 
                                              distance(points[j], points[k]),
                                              distance(points[k], points[i])));
    return ans;
    }
};