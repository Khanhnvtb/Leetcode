//https://leetcode.com/problems/verifying-an-alien-dictionary

class Solution {
public:
    unordered_map<char, int> m;
    int compareTo(string s1, string s2){
        if(s1 == s2) return 0;
        int i = 0, len1 = s1.length(), len2 = s2.length();
        while(i < len1 && i < len2){
            if(m[s1[i]] > m[s2[i]]) return 1;
            else if(m[s1[i]] < m[s2[i]]) return -1;
            i++;
        }
        if(i < len1 && len1 > len2) return 1;
        return -1;
    }

    bool isAlienSorted(vector<string>& words, string order) {
        for(int i = 0; i < 26; i++)
            m[order[i]] = i;
        for(int i = 0; i < words.size() - 1; i++)
            if(compareTo(words[i], words[i + 1]) == 1) return false;
        return true;
    }
};
