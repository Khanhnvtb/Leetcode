//https://leetcode.com/problems/cousins-in-binary-tree

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    struct Data{
        TreeNode* node;
        int depth;
        int parent;
    };

    bool isCousins(TreeNode* root, int x, int y) {
        int depth = 0, parent;
        queue<Data> q;
        q.push({root, 0, 0});
        while(!q.empty()){
            TreeNode* node = q.front().node;
            int currDepth = q.front().depth;
            int currParent = q.front().parent;
            q.pop();
            if(node->val == x || node->val == y){
                if(depth == 0) {
                    depth = currDepth;
                    parent = currParent;
                }
                else{
                    if(depth == currDepth && parent != currParent) return true;
                    else return false;
                }
            }
            if(node->left) q.push({node->left, currDepth + 1, node->val});
            if(node->right) q.push({node->right, currDepth + 1, node->val});
        }
        return false;
    }
};
