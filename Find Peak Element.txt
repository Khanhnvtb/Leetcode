//https://leetcode.com/problems/find-peak-element/description/

class Solution {
public:
    vector<int> v;
    int n;
    int solve(int l, int r){
        int m;
        while(l <= r){
            m = (l + r) / 2;
            if(m > 0 && m < n && v[m] > v[m - 1] && v[m] > v[m + 1]) return m;
            int x = solve(l, m - 1);
            return (x != -1) ? x : solve(m + 1, r);
        }
        return -1;
    }
    int findPeakElement(vector<int>& nums) {
        n = nums.size() - 1;
        v = nums;
        if(n == 0) return 0;
        if(n == 1){
            if(nums[0] > nums[1]) return 0;
            return 1;
        }
        if(v[0] > v[1]) return 0;
        if(v[n] > v[n - 1]) return n;
        return solve(0, n);
    }
};