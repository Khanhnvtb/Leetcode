//https://leetcode.com/problems/path-sum-ii/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans;
    vector<int> v;
    void Try(TreeNode* root, int sum, int target){
        if(!root) return;
        sum += root->val;
        v.push_back(root->val);
        if(sum == target && !root->left && !root->right) {
            ans.push_back(v);
            v.pop_back();
            return;
        }
        if(root->left) Try(root->left, sum, target);
        if(root->right) Try(root->right, sum, target);
        v.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        Try(root, 0, targetSum);
        return ans;
    }
};