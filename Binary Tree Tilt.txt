//https://leetcode.com/problems/binary-tree-tilt/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int totalTilt;
    int sumNode(TreeNode* node){
        if(!node) return 0;
        int sumLeft = sumNode(node->left);
        int sumRight = sumNode(node->right);
        totalTilt += abs(sumLeft - sumRight);
        return sumLeft + sumRight + node->val;
    }

    int findTilt(TreeNode* root) {
        totalTilt = 0;
        if(root) sumNode(root);
        return totalTilt;
    }
};
