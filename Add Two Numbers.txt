//https://leetcode.com/problems/add-two-numbers/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = new ListNode();
        ListNode* tmp = ans;
        int prev = 0;
        while(l1 != NULL && l2 != NULL){
            tmp->next = new ListNode();
            tmp = tmp->next;
            int sum = l1->val + l2->val + prev;
            if(sum > 9){
                prev = 1;
                tmp->val = sum - 10;
            }else{
                prev = 0;
                tmp->val = sum;
            }
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1 != NULL){
            tmp->next = new ListNode();
            tmp = tmp->next;
            int sum = l1->val + prev;
            if(sum > 9){
                prev = 1;
                ans->val = sum - 10;
            }else{
                prev = 0;
                tmp->val = sum;
            }
            l1 = l1->next;
        }
        while(l2 != NULL){
            tmp->next = new ListNode();
            tmp = tmp->next;
            int sum = l2->val + prev;
            if(sum > 9){
                prev = 1;
                tmp->val = sum - 10;
            }else{
                prev = 0;
                tmp->val = sum;
            }
            l2 = l2->next;
        }
        if(prev == 1){
            tmp->next = new ListNode(1);
            tmp = tmp->next;
        }
        return ans->next;
    }
};
