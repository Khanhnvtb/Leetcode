//https://leetcode.com/problems/spiral-matrix/description/

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int i = 0, j = 0, ln = 0, lm = 0, index = 0;
        int n = matrix.size() - 1, m = matrix[0].size() - 1, size = (m + 1)* (n + 1);
        vector<int> v(size);
        while(index < size){
            while(j <= m) {
                v[index++] = matrix[i][j];
                if(j < m) j++;
                else break;
            }
            if(index == size) break;
            i++;
            ln++;
            while(i <= n) {
                v[index++] = matrix[i][j];
                if(i < n) i++;
                else break;
            }
            if(index == size) break;
            j--;
            m--;
            while(j >= lm) {
                v[index++] = matrix[i][j];
                if(j > lm) j--;
                else break;
            }
            if(index == size) break;
            i--;
            n--;
            while(i >= ln){
                v[index++] = matrix[i][j];
                if(i > ln) i--;
                else break;
            }
            if(index == size) break;
            j++;
            lm++;
        }
        return v;
    }
};