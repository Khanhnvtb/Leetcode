//https://leetcode.com/problems/coin-change/description/

class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        if(amount == 0) return 0;
        sort(coins.begin(), coins.end());
        int n = coins.size();
        int dp[amount + 1];
        dp[0] = 0;
        for(int i = 1; i<= amount; i++) {
            int tmp = -1;
            for(int j = 0; j< n; j++){
                int phanDu = i - coins[j];
                if(phanDu < 0) break;
                else if(phanDu == 0) tmp = 1;
                else if(dp[phanDu] != -1){
                    if(tmp == -1) tmp = dp[phanDu] + 1;
                    else tmp = min(tmp, dp[phanDu] + 1);
                }
            }
            dp[i] = tmp;
        }
        return dp[amount];
    }
};