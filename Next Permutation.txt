//https://leetcode.com/problems/next-permutation/description/

class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int k = -1, n = nums.size();
        for (int i = n - 1; i > 0; i--) {
            if (nums[i] > nums[i - 1]) {
                k = i - 1;
                for (int j = n - 1; j > k; j--) {
                    if (nums[j] > nums[k]) {
                        swap (nums[j], nums[k]);
                        break;
                    }
                }
                int l = k + 1;
                int r = n - 1;
                while (l < r) {
                    swap (nums[l], nums[r]);
                    l++;
                    r--;
                }
                break;
            }
        }
        if (k == -1) sort(nums.begin(), nums.end());
    }
};
