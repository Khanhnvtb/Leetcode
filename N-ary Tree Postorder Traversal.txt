//https://leetcode.com/problems/n-ary-tree-postorder-traversal/

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> postorder(Node* root) {
        vector<int> ans;
        if(root){
            for(Node* node: root->children){
                vector<int> tmp = postorder(node);
                ans.insert(ans.end(), tmp.begin(), tmp.end());
            }
            ans.push_back(root->val);
        }
        return ans;
    }
};
