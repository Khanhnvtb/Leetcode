//https://leetcode.com/problems/construct-string-from-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string tree2str(TreeNode* root) {
        string ans = "";
        if(root){
            ans += to_string(root->val);
            if(root->left || root->right){
                ans.push_back('(');
                string left = tree2str(root->left);
                ans.insert(ans.end(), left.begin(), left.end());
                ans.push_back(')');
                if(root->right){
                    ans.push_back('(');
                    string right = tree2str(root->right);
                    ans.insert(ans.end(), right.begin(), right.end());
                    ans.push_back(')');
                }
            }
        }
        return ans;
    }
};
