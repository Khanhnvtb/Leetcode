//https://leetcode.com/problems/3sum/description/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> a;
         set<vector<int>> s;
        unordered_map<int, int> m;
        for(int i : nums) {
            m[i]++;
            if(m[i] < 4) a.push_back(i);
        }
        for(int i = 0; i < a.size() - 1; i++){
            m[a[i]]--;
            for(int j = i + 1; j < a.size(); j++){
                int sum = a[i] + a[j];
                m[a[j]]--;
                if(m[-sum] > 0) {
                    vector<int> v = {a[i], a[j], -sum};
                    sort(v.begin(), v.end());
                    s.insert(v);
                }
                m[a[j]]++;
            }
            m[a[i]]++;
        }
        for(auto i : s) ans.push_back(i);
        return ans;
    }
};