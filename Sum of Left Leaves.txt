//https://leetcode.com/problems/sum-of-left-leaves/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        int ans = 0;
        queue<pair<TreeNode*, int>> q;
        if(root->left) q.push({root->left, 1});
        if(root->right) q.push({root->right, 0});
        while(!q.empty()){
            TreeNode* node = q.front().first;
            int isLeft = q.front().second;
            q.pop();
            if(!node->left && !node->right && isLeft == 1) ans += node->val;
            if(node->left) q.push({node->left, 1});
            if(node->right) q.push({node->right, 0});
        }
        return ans;
    }
};
