//https://leetcode.com/problems/fruit-into-baskets/description/

class Solution {
public:
    int totalFruit(vector<int>& fruits) {
        unordered_map <int, int> m;
        int prev = fruits[0], ans = 0, index = 0;
        for(int i = 0; i < fruits.size(); i++){
            m[fruits[i]]++;
            if(m.size() > 2){
                ans = max(ans, i - index);
                for(int j = i - 1; j >= 0; j--)
                    if(fruits[j] != prev) {
                        index = j + 1;
                        break;
                    }
            for(auto it : m)
                if(it.first != prev && it.first != fruits[i]) {
                    m.erase(it.first);
                    break;
                }
            } 
            if(fruits[i] != prev) prev = fruits[i];
        }
        int tmp = fruits.size() - index;
        return max(ans, tmp);
    }
};